{"version":3,"sources":["components/user-pages/Signup.js","components/user-pages/Login.js","components/post-ad/CarPostAd.js","components/post-ad/HousePostAd.js","components/post-ad/PostAd.js","components/dashboard/LatestListing.js","components/dashboard/Dashboard.js","components/Posts/AllCars.js","components/Posts/CarDetails.js","components/Posts/AllHouses.js","components/Posts/HouseDetails.js","components/user-pages/MyListings.js","components/user-pages/EditListing.js","App.js","serviceWorker.js","index.js"],"names":["Signup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","firstName","lastName","message","event","_event$target","target","name","value","setState","defineProperty","_this2","preventDefault","axios","post","concat","process","withCredentials","then","responseFromServer","userInfo","data","onUserChange","catch","err","response","_this3","currentUser","react_default","a","createElement","react_router","to","className","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","Component","Login","CarPostAd","title","images","price","description","condition","cylinders","drive","fuel","odometer","paintColor","transmission","isSubmitSuccesfull","isSubmitSuccessful","files","uploadData","FormData","console","log","i","length","append","theImages","forEach","oneFile","push","fileUrl","error","_this4","uploadImage","multiple","HousePostAd","address","houseType","squareFeet","totalRooms","totalBathrooms","parking","petsAllowed","isSubmitSuccessfull","PostAd","adType","post_ad_CarPostAd","post_ad_HousePostAd","LatestListing","latestListings","get","responseFromApi","Carousel","map","eachListing","Item","key","_id","src","alt","Caption","Dashboard","dashboard_LatestListing","Container_default","Row_default","Col_default","react_router_dom","AllCars","allCars","eachCar","CarDetails","params","match","carid","_this$state","eachImage","width","AllHouses","allHouses","eachHouse","HouseDetails","houseid","es_Container","Row","Col","MyListings","myListings","toConsumableArray","cars","houses","index","id","postType","delete","history","eachListings","pathname","listings","onClick","deleteListing","EditListing","location","listingType","submitSuccesfull","put","submitSuccessful","App","syncCurrentUser","alert","logoutClick","path","component","render","user_pages_Signup","user_pages_Login","post_ad_PostAd","Posts_AllCars","Posts_AllHouses","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31e061de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// axios calls the backend routes, like so: backend /api/signup\", axios.CRUD\nimport axios from \"axios\";\n\nimport { Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      message: null\n    };\n  }\n\n  // USE THIS FOR ALL REACT FORMS!\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n    // [name] is the name from the form and the state, then update that with the value being entered\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/signup`, // 1st mandatory: which route I am hitting in the backend\n        this.state, // 2nd mandatory: what I am sending (in this case POST route, need to send something. For GET route, this is not mandatory)\n        { withCredentials: true } // 3rd optional: \"credentials: true\" (in CORS/App.js backend) which allows frontend to comminucate with backend\n      )\n      .then(responseFromServer => {\n        // console.log(\"responseFromServer: \", responseFromServer); destructure:\n        const { userInfo } = responseFromServer.data;\n        // sending userInfo back to parent through props like so:\n        this.props.onUserChange(userInfo);\n      })\n\n      .catch(err => {\n        // console.log(\"error while signup: \", err.response);\n        // in req, res, next; \"response\" is an object that has many fields, therefore we must dig deeper like so placeholder.response.data.message.\n        // (req, res, next) is/are sent as a json file from the backend\n        if (err.response && err.response.data) {\n          return this.setState({ message: err.response.data.message });\n        }\n      });\n  }\n\n  render() {\n    // this.props is how you access the props from the parent component. From the parent component we send to the child component as this.state\n    if (this.props.currentUser) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <section className=\"forms\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          {/* onChange updates the event per letter being entered; onSubmit is the clicking of button */}\n          <label> Email: </label>\n          <input\n            name=\"email\"\n            value={this.state.email}\n            onChange={event => this.genericSync(event)}\n            type=\"email\"\n            placeholder=\"johnsmith@email.com\"\n          />\n          <br />\n          <label> Password: </label>\n          <input\n            name=\"password\"\n            value={this.state.password}\n            onChange={event => this.genericSync(event)}\n            type=\"password\"\n            placeholder=\"*********\"\n          />\n          <br />\n          <label> First Name: </label>\n          <input\n            name=\"firstName\"\n            value={this.state.firstName}\n            onChange={event => this.genericSync(event)}\n            type=\"firstName\"\n            placeholder=\"John\"\n          />\n          <br />\n          <label> Last Name: </label>\n          <input\n            name=\"lastName\"\n            value={this.state.lastName}\n            onChange={event => this.genericSync(event)}\n            type=\"lastName\"\n            placeholder=\"Smith\"\n          />\n          <br />\n          <button className=\"button\"> Sign Up </button>\n        </form>\n\n        {/* if statement: if both, leftSide && rightSide, are true (or not null as stated in the state), \n                display rightSide (which is the actual message) */}\n        {this.state.message && <div> {this.state.message} </div>}\n        {/* rightSide is wrapped in div because you cannot have a child HTML */}\n      </section>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      message: null\n    };\n  }\n\n  // REUSE ON ALL FORMS\n  genericSync(event) {\n    // name is of label | value is the state of the label\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/login`, this.state, {\n        withCredentials: true\n      })\n      .then(responseFromServer => {\n        const { userInfo } = responseFromServer.data;\n        this.props.onUserChange(userInfo);\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    if (this.props.currentUser) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <section className=\"forms\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label> Email: </label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.email}\n            placeholder=\"johnsmith@email.com\"\n          />\n          <br />\n          <label> Password: </label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.password}\n            placeholder=\"*********\"\n          />\n          <br />\n\n          <button className=\"button\"> Log In </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass CarPostAd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      images: [],\n      price: \"\",\n      description: \"\",\n      condition: \"\",\n      cylinders: \"\",\n      drive: \"\",\n      fuel: \"\",\n      odometer: \"\",\n      paintColor: \"\",\n      transmission: \"\",\n      type: \"\",\n      isSubmitSuccesfull: false\n    };\n  }\n\n  // REUSE ON ALL FORMS\n  genericSync(event) {\n    // name is of label | value is the state of the label\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/car-post`, this.state, {\n        withCredentials: true\n      })\n      .then(responseFromServer => {\n        this.setState({ isSubmitSuccessful: true });\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  uploadImage(event) {\n    const { files } = event.target;\n    const uploadData = new FormData();\n\n    console.log(\"here are the files\", files);\n\n    for (let i = 0; i < files.length; i++) {\n      uploadData.append(\"submittedFile\", files[i]);\n    }\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/upload-file`, uploadData, {\n        withCredentials: true\n      })\n      .then(response => {\n        const theImages = [];\n        response.data.forEach(oneFile => theImages.push(oneFile.fileUrl));\n        this.setState({ images: theImages });\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    if (this.state.isSubmitSuccessful) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <section>\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label> Title: </label>\n          <input\n            name=\"title\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.title}\n            placeholder=\"Car for Sale $20000\"\n          />\n          <br />\n          <label> Price: $ </label>\n          <input\n            name=\"price\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.price}\n            placeholder=\"20,000\"\n          />\n          <br />\n          <label> Description: </label>\n          <input\n            name=\"description\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.description}\n            placeholder=\"Selling brand new 2010 Civic\"\n          />\n          <br />\n          <label> Type: </label>\n          <input\n            name=\"type\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.type}\n            placeholder=\"Coupe, Convertible, Sedan, Hatchback, Crossover, SUV\"\n          />\n          <br />\n          <label> Condition: </label>\n          <input\n            name=\"condition\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.condition}\n            placeholder=\"New or Used\"\n          />\n          <br />\n          <label> Cylinders: </label>\n          <input\n            name=\"cylinders\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.cylinders}\n            placeholder=\"2, 4, 6 or 8 etc..\"\n          />\n          <br />\n          <label> Drive: </label>\n          <input\n            name=\"drive\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.drive}\n            placeholder=\"FWD, AWD, or RWD\"\n          />\n          <br />\n          <label> Fuel: </label>\n          <input\n            name=\"fuel\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.fuel}\n            placeholder=\"Gas, Diesel or None / Electric\"\n          />\n          <br />\n          <label> Odometer: </label>\n          <input\n            name=\"odometer\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.odometer}\n            placeholder=\"85k\"\n          />\n          <br />\n          <label> Paint Color: </label>\n          <input\n            name=\"paintColor\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.paintColor}\n            placeholder=\"Black, White, Red, etc..\"\n          />\n          <br />\n          <label> Transmission: </label>\n          <input\n            name=\"transmission\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.transmission}\n            placeholder=\"Automatic or Manual\"\n          />\n          <br />\n          <label>Select images: </label>\n          <input\n            type=\"file\"\n            name=\"images\"\n            onChange={event => this.uploadImage(event)}\n            multiple\n          />\n          <br />\n          <button className=\"button\"> Post Ad </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default CarPostAd;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass HousePostAd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      images: [],\n      price: \"\",\n      description: \"\",\n      address: \"\",\n      houseType: \"\",\n      squareFeet: \"\",\n      totalRooms: \"\",\n      totalBathrooms: \"\",\n      parking: \"\",\n      petsAllowed: \"\",\n      isSubmitSuccessfull: false\n    };\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios               \n      .post(`${process.env.REACT_APP_API_URL}/house-post`, this.state, {\n        withCredentials: true\n      })\n      .then(responseFromServer => {\n        this.setState({ isSubmitSuccessful: true });\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  uploadImage(event) {\n    const { files } = event.target;\n    const uploadData = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      uploadData.append(\"submittedFile\", files[i]);\n    }\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/upload-file`, uploadData, {\n        withCredentials: true\n      })\n      .then(response => {\n        const theImages = [];\n        response.data.forEach(oneFile => theImages.push(oneFile.fileUrl));\n        this.setState({ images: theImages });\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    if (this.state.isSubmitSuccessful) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <section>\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label> Title: </label>\n          <input\n            name=\"title\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.title}\n            placeholder=\"post title\"\n          />\n          <br />\n          <label> Price: </label>\n          <input\n            name=\"price\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.price}\n            placeholder=\"$\"\n          />\n          <br />\n          <label> Description: </label>\n          <input\n            name=\"description\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.description}\n            placeholder=\"describe house here\"\n          />\n          <br />\n          <label> Address: </label>\n          <input\n            name=\"address\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.address}\n            placeholder=\"address\"\n          />\n          <br />\n          <label> House Type: </label>\n          <input\n            name=\"houseType\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.houseType}\n            placeholder=\"apt/condo, efficiency, studio, townhouse\"\n          />\n          <br />\n          <label> Square Footage: </label>\n          <input\n            name=\"squareFeet\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.squareFeet}\n            placeholder=\"square footage\"\n          />\n          <br />\n          <label> Total Rooms: </label>\n          <input\n            name=\"totalRooms\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.totalRooms}\n            placeholder=\"total number of rooms\"\n          />\n          <br />\n          <label> Total Bathrooms: </label>\n          <input\n            name=\"totalBathrooms\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.totalBathrooms}\n            placeholder=\"2\"\n          />\n\n          <br />\n          <label> Parking Spaces: </label>\n          <input\n            name=\"parking\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.parking}\n            placeholder=\"parking spaces\"\n          />\n          <br />\n          <label> Pet Friendly: </label>\n          <input\n            name=\"petsAllowed\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.petsAllowed}\n            placeholder=\"yes/no\"\n          />\n          <br />\n          <label> Images: </label>\n          <input\n            type=\"file\"\n            // onChange is standard, but note for IMAGE it is UPLOADIMAGE!! Note \"event\" can be also \"e\"\n            onChange={event => this.uploadImage(event)}\n            multiple\n          />\n          <br />\n          <button className=\"button\">Post Ad</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default HousePostAd;\n","import React, { Component } from \"react\";\n\nimport CarPostAd from \"./CarPostAd\";\nimport HousePostAd from \"./HousePostAd\";\n\nclass PostAd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      adType: \"\"\n    };\n  }\n\n  // USE THIS FOR ALL REACT FORMS!\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n\n    // [name] is the name from the form and the state, then update that with the value being entered\n  }\n\n  render() {\n    return (\n      <section className=\"postForm\">\n        <form>\n          <select\n            value={this.state.adType}\n            name=\"adType\"\n            onChange={event => this.genericSync(event)}\n          >\n            <option value=\"\"> </option>\n            <option value=\"car\"> Car Post </option>\n            <option value=\"house\"> House Post </option>\n          </select>\n        </form>\n        {this.state.adType === \"car\" ? (\n          <CarPostAd />\n        ) : this.state.adType === \"house\" ? (\n          <HousePostAd />\n        ) : null}\n      </section>\n    );\n  }\n}\n\nexport default PostAd;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Carousel } from \"react-bootstrap\";\n\nclass LatestListing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latestListings: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/all-listings\", {\n        withCredentials: true\n      })\n      .then(responseFromApi => {\n        console.log('front latest listings: ', responseFromApi)\n        this.setState({ latestListings: responseFromApi.data });\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    const { latestListings } = this.state;\n\n    return (\n      <Carousel className=\"imgCarousel\">\n        {latestListings.map(eachListing => {\n          return (\n            <Carousel.Item key={eachListing._id}>\n              <img\n                className=\"d-block w-100 carouselImg\"\n                src={eachListing.images[0]}\n                alt={eachListing.title}\n              />\n              <Carousel.Caption>\n                <h3>{eachListing.title}</h3>\n                <p>${eachListing.price}</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n          );\n        })}\n      </Carousel>\n    );\n  }\n}\n\nexport default LatestListing;\n","import React, { Component } from \"react\";\nimport LatestListing from \"./LatestListing\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <section>\n        <LatestListing />\n\n        <Container>\n          <Row>\n            <Col className=\"shadowBG\">\n              <h1 className=\"boxHeader\">My Account</h1>\n              <hr />\n              <Link to={\"/myaccount/mylistings\"}>\n                <p>My Listings</p>\n              </Link>\n              <p>Saved Postings</p>\n              <p>Account information</p>\n              <p>Account Settings</p>\n            </Col>\n            <Col className=\"shadowBG\">\n              <h1 className=\"boxHeader\">Community</h1>\n              <hr />\n              <p>Activities</p>\n              <p>Artists</p>\n              <p>Child Care</p>\n              <p>Classes</p>\n              <p>General</p>\n              <p>Groups</p>\n            </Col>\n            <Col className=\"shadowBG\">\n              <h1 className=\"boxHeader\">Personal</h1>\n              <hr />\n              <p>Flatmate wanted</p>\n              <p>Road trips seeking</p>\n              <p>Relationships seeking</p>\n              <p>Business advice needed</p>\n              <p>Free tickets for food show</p>\n              <p>Office space needed</p>\n            </Col>\n          </Row>\n          <Row className=\"bottomBox\">\n            <Col className=\"shadowBG\">\n              <h1 className=\"boxHeader\">For Sale</h1>\n              <hr />\n              <p>Antiques</p>\n              <p>Appliances</p>\n              <p>Arts + Crafts</p>\n              <p>Autoparts</p>\n              <p>Baby + kids</p>\n              <p>Beauty</p>\n              <p>Bikes</p>\n              <p>Boats</p>\n              <p>Books</p>\n              <p>Business</p>\n              <Link to={\"/forsale/cars\"}>\n                <p>Cars</p>\n              </Link>\n              <p>Cellphones</p>\n            </Col>\n            <Col className=\"shadowBG\">\n              <h1 className=\"boxHeader\">Housing</h1>\n              <hr />\n              <p>Apartments</p>\n              <p>Commercial</p>\n              <Link to={\"/foresale/housing\"}>\n                <p>Housing</p>\n              </Link>\n              <p>Housing Swap</p>\n              <p>Housing Wanted</p>\n              <p>Office</p>\n              <p>Parking / Storage</p>\n              <p>Vacation Rentals</p>\n              <p>Real estate</p>\n              <p>Rooms Wanted</p>\n              <p>Sublets</p>\n            </Col>\n            <Col className=\"shadowBG\">\n              <h1 className=\"boxHeader\">Jobs</h1>\n              <hr />\n              <p>Accounting</p>\n              <p>Art / Design</p>\n              <p>Business</p>\n              <p>Customer Service</p>\n              <p>Education</p>\n              <p>Food</p>\n              <p>General Labor</p>\n              <p>Government</p>\n              <p>Human Resources</p>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass AllCars extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCars: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/all-cars`, { withCredentials: true })\n      .then(responseFromApi => {\n        this.setState({ allCars: responseFromApi.data });\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"All Cars\", this.state.allCars);\n    const { allCars } = this.state;\n    return (\n      <section>\n        <Container>\n          <Row className=\"allListings\">\n            {allCars.map(eachCar => {\n              return (\n                <Col key={eachCar._id}>\n                  <Link to={`/cars/${eachCar._id}`}>\n                    <img\n                      className=\"allCarsImage\"\n                      src={eachCar.images[0]}\n                      alt={eachCar.title}\n                    />\n                  </Link>\n                  <p>{eachCar.title}</p>\n                  <p>{eachCar.price}</p>\n                </Col>\n              );\n            })}\n          </Row>\n        </Container>\n      </section>\n    );\n  }\n}\n\nexport default AllCars;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass CarDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/car-details/${params.carid}`, {\n        withCredentials: true\n      })\n      .then(responseFromApi => {\n        this.setState(responseFromApi.data);\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"State of carid \", this.state);\n    const {\n      title,\n      images,\n      condition,\n      cylinders,\n      drive,\n      fuel,\n      odometer,\n      paintColor,\n      transmission,\n      type,\n      description,\n      price\n    } = this.state;\n    return (\n      <Container>\n        <Row className=\"detailListing\">\n          <Col>\n            <p>{title}</p>\n\n            {images.map((eachImage, i) => {\n              return <img src={eachImage} key={i} alt=\"text\" width=\"300px\" />;\n            })}\n\n            <p>Description from seller:</p>\n            <p>{description}</p>\n          </Col>\n          <Col>\n            <div className=\"text-center\">\n              <p>${price}</p>\n              <button className=\"button\">Contact the owner</button>\n              <br />\n              <button className=\"button\">Add to favorite</button>\n              <p>Key Details</p>\n            </div>\n            <Row>\n              <Col>\n                <div className=\"text-right\">\n                  <p>Condition:</p>\n                  <p>Cylinders:</p>\n                  <p>Drive:</p>\n                  <p>Fuel:</p>\n                  <p>Odometer:</p>\n                  <p>Paint Color:</p>\n                  <p>Transmission:</p>\n                  <p>Type:</p>\n                </div>\n              </Col>\n              <Col>\n                <p>{condition}</p>\n                <p>{cylinders}</p>\n                <p>{drive}</p>\n                <p>{fuel}</p>\n                <p>{odometer}</p>\n                <p>{paintColor}</p>\n                <p>{transmission}</p>\n                <p>{type}</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default CarDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass AllHouses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allHouses: []\n    };\n  }\n\n  componentDidMount() {\n    // get all houses from the database first, when componentMounts first it is empty, then rerenders.\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/all-houses`, { withCredentials: true })\n      .then(responseFromApi => {\n        this.setState({ allHouses: responseFromApi.data });\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"All Houses\", this.state.allHouses); // <= test if the database was sending the right information, good.\n    const { allHouses } = this.state;\n    return (\n      <Container>\n        <Row className=\"allListings\">\n          {allHouses.map(eachHouse => {\n            return (\n              <Col>\n                <Link to={`/housing/${eachHouse._id}`}>\n                  <img\n                    className=\"allHouseImage\"\n                    src={eachHouse.images[0]}\n                    alt={eachHouse.title}\n                  />\n                </Link>\n                <p>{eachHouse.title}</p>\n                <p>{eachHouse.price}</p>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AllHouses;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass HouseDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/house-details/${params.houseid}`, {\n        withCredentials: true\n      })\n      .then(responseFromApi => {\n        this.setState(responseFromApi.data);\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  render() {\n    console.log(\"House ID\", this.state);\n    const {\n      title,\n      images,\n      address,\n      houseType,\n      squareFeet,\n      totalRooms,\n      totalBathrooms,\n      parking,\n      petsAllowed,\n      price,\n      description\n    } = this.state;\n    return (\n      <Container>\n        <Row className=\"detailListing\">\n          <Col>\n            <p>{title}</p>\n            {images.map((eachImage, i) => {\n              return <img src={eachImage} key={i} alt=\"text\" width=\"300px\" />;\n            })}\n            <p>Description from seller:</p>\n            <p>{description}</p>\n          </Col>\n          <Col>\n            <div className=\"text-center\">\n              <p>${price}</p>\n              <button className=\"button\">Contact the owner</button>\n              <br />\n              <button className=\"button\">Add to favorite</button>\n              <p>Key Details</p>\n            </div>\n            <Row>\n              <Col>\n                <div className=\"text-right\">\n                  <p>Address:</p>\n                  <p>House Type:</p>\n                  <p>Square Feet:</p>\n                  <p>Total Rooms:</p>\n                  <p>Total Bathrooms:</p>\n                  <p>Parking:</p>\n                  <p>Pets Allowed:</p>\n                </div>\n              </Col>\n              <Col>\n                <p>{address}</p>\n                <p>{houseType}</p>\n                <p>{squareFeet}</p>\n                <p>{totalRooms}</p>\n                <p>{totalBathrooms}</p>\n                <p>{parking}</p>\n                <p>{petsAllowed}</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default HouseDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass MyListings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myListings: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/my-listings`, { withCredentials: true })\n      .then(responseFromApi => {\n        this.setState({\n          myListings: [\n            ...this.state.myListings,\n            ...responseFromApi.data.cars,\n            ...responseFromApi.data.houses\n          ]\n        });\n      })\n      .catch(err => {\n        if (err.response && err.response.data)\n          return this.setState({ message: err.response.data.message });\n      });\n  }\n\n  deleteListing(index) {\n    const { myListings } = this.state;\n    const id = myListings[index]._id;\n\n    if (myListings[index].postType === \"car\") {\n      axios\n        .delete(`${process.env.REACT_APP_API_URL}/delete-car/${id}`, {\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.props.history.push(\"/phone-list\");\n        })\n        .catch(err => console.log(err));\n    } else {\n      axios\n        .delete(`${process.env.REACT_APP_API_URL}/delete-house/${id}`, {\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.props.history.push(\"/phone-list\");\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    console.log(\"new state: \", this.state.myListings);\n    const { myListings } = this.state;\n\n    return (\n      <section>\n        <div className=\"text-center myListingTitle\">\n          <h1> My Listings</h1>\n        </div>\n\n        {myListings.map((eachListings, i) => {\n          return (\n            <section key={i}>\n              <Container className=\"myListings\">\n                <Row>\n                  <Col className=\"text-right\">\n                    <Link\n                      to={{\n                        pathname: `/myaccount/editlisting/${eachListings._id}`,\n                        state: { listings: this.state.myListings, index: { i } }\n                      }}\n                    >\n                      <button className=\"button\">Edit</button>\n                    </Link>\n                    <button\n                      onClick={() => this.deleteListing(i)}\n                      className=\"button\"\n                    >\n                      Delete\n                    </button>\n                  </Col>\n                  <Col>\n                    <p>{eachListings.title}</p>\n                  </Col>\n                </Row>\n              </Container>\n            </section>\n          );\n        })}\n      </section>\n    );\n  }\n}\n\nexport default MyListings;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nclass EditListing extends Component {\n  constructor(props) {\n    super(props);\n    if (this.props.location.state) {\n      const listingType = this.props.location.state.listings[\n        this.props.location.state.index.i\n      ];\n      const {\n        title,\n        images,\n        price,\n        description,\n        address,\n        houseType,\n        squareFeet,\n        totalRooms,\n        totalBathrooms,\n        parking,\n        petsAllowed,\n        condition,\n        cylinders,\n        drive,\n        fuel,\n        odometer,\n        paintColor,\n        transmission,\n        type\n      } = listingType;\n      this.state = {\n        title,\n        images,\n        price,\n        description,\n        address,\n        houseType,\n        squareFeet,\n        totalRooms,\n        totalBathrooms,\n        parking,\n        petsAllowed,\n        condition,\n        cylinders,\n        drive,\n        fuel,\n        odometer,\n        paintColor,\n        transmission,\n        type,\n        submitSuccesfull: false\n      };\n    }\n    // this.state= {\n    //     submitSuccesful: false,\n    // }\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    const listingType = this.props.location.state.listings[\n      this.props.location.state.index.i\n    ];\n    const id = this.props.location.state.listings[\n      this.props.location.state.index.i\n    ]._id;\n\n    if (listingType.postType === \"car\") {\n      axios\n        .put(`${process.env.REACT_APP_API_URL}/car-update/${id}`, this.state, {\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.setState({ submitSuccessful: true });\n        })\n        .catch(err => console.log(err));\n    } else {\n      axios\n        .put(`${process.env.REACT_APP_API_URL}/house-update/${id}`, this.state, {\n          withCredentials: true\n        })\n        .then(responseFromApi => {\n          this.props.history.push(\"/\");\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    if (this.state === null) {\n      return <Redirect to=\"/\" />;\n    }\n    const listingType = this.props.location.state.listings[\n      this.props.location.state.index.i\n    ].postType;\n    console.log(\"HELLO LISTING TYPE\", listingType);\n\n    if (listingType === \"car\") {\n      return (\n        <div className=\"postForm\">\n          <h1>EDIT POST</h1>\n          <form onSubmit={event => this.handleSubmit(event)}>\n            <label> Title: </label>\n            <input\n              name=\"title\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.title}\n            />\n            <br />\n            <label> Price: $ </label>\n            <input\n              name=\"price\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.price}\n            />\n            <br />\n            <label> Description: </label>\n            <input\n              name=\"description\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.description}\n            />\n            <br />\n            <label> Type: </label>\n            <input\n              name=\"type\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.type}\n            />\n            <br />\n            <label> Condition: </label>\n            <input\n              name=\"condition\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.condition}\n            />\n            <br />\n            <label> Cylinders: </label>\n            <input\n              name=\"cylinders\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.cylinders}\n            />\n            <br />\n            <label> Drive: </label>\n            <input\n              name=\"drive\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.drive}\n            />\n            <br />\n            <label> Fuel: </label>\n            <input\n              name=\"fuel\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.fuel}\n            />\n            <br />\n            <label> Odometer: </label>\n            <input\n              name=\"odometer\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.odometer}\n            />\n            <br />\n            <label> Paint Color: </label>\n            <input\n              name=\"paintColor\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.paintColor}\n            />\n            <br />\n            <label> Transmission: </label>\n            <input\n              name=\"transmission\"\n              type=\"text\"\n              onChange={event => this.genericSync(event)}\n              value={this.state.transmission}\n            />\n            <br />\n\n            <button className=\"button\"> Post Ad </button>\n          </form>\n        </div>\n      );\n    }\n    return (\n      <section className=\"postForm\">\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label> Title: </label>\n          <input\n            name=\"title\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.title}\n          />\n          <br />\n          <label> Price: </label>\n          <input\n            name=\"price\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.price}\n          />\n          <br />\n          <label> Description: </label>\n          <input\n            name=\"description\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.description}\n          />\n          <br />\n          <label> Address: </label>\n          <input\n            name=\"address\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.address}\n          />\n          <br />\n          <label> House Type: </label>\n          <input\n            name=\"houseType\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.houseType}\n          />\n          <br />\n          <label> Square Footage: </label>\n          <input\n            name=\"squareFeet\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.squareFeet}\n          />\n          <br />\n          <label> Total Rooms: </label>\n          <input\n            name=\"totalRooms\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.totalRooms}\n          />\n          <br />\n          <label> Total Bathrooms: </label>\n          <input\n            name=\"totalBathrooms\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.totalBathrooms}\n          />\n\n          <br />\n          <label> Parking Spaces: </label>\n          <input\n            name=\"parking\"\n            type=\"number\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.parking}\n          />\n          <br />\n          <label> Pet Friendly: </label>\n          <input\n            name=\"petsAllowed\"\n            type=\"text\"\n            onChange={event => this.genericSync(event)}\n            value={this.state.petsAllowed}\n          />\n          <br />\n          <label> Images: </label>\n          <input\n            type=\"file\"\n            // onChange is standard, but note for IMAGE it is UPLOADIMAGE!! Note \"event\" can be also \"e\"\n            onChange={event => this.uploadImage(event)}\n            multiple\n          />\n          <br />\n          <button className=\"button\">Post Ad</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default EditListing;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport axios from 'axios';\n\nimport { Switch, NavLink, Route } from \"react-router-dom\";\n\nimport Signup from \"./components/user-pages/Signup\";\nimport Login from \"./components/user-pages/Login\";\nimport PostAd from \"./components/post-ad/PostAd\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport AllCars from \"./components/Posts/AllCars\";\nimport CarDetails from \"./components/Posts/CarDetails\";\nimport AllHouses from \"./components/Posts/AllHouses\";\nimport HouseDetails from \"./components/Posts/HouseDetails\";\nimport MyListings from \"./components/user-pages/MyListings\";\nimport EditListing from \"./components/user-pages/EditListing\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null // to update state when there is a user logged in, update to true.\n    };\n  }\n\n  syncCurrentUser(userInfo) {\n    this.setState({ currentUser: userInfo }); // update the state of currentUser with userInfo\n  }\n\n  logoutClick() {\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_URL}/logout`,\n        { withCredentials: true } // FORCE axios to send cookies across domains\n      )\n      .then(() => {\n        this.syncCurrentUser(null);\n      })\n      .catch(err => {\n        console.log(\"Logout ERROR\", err);\n        alert(\"Sorry! Something went wrong.\");\n      });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.currentUser ? (\n            <Row className=\"navBarStyle\">\n              <Col>\n                <NavLink to=\"/dashboard\"> Craigslist </NavLink>\n              </Col>\n              <Col>\n                <div className=\"text-right\">\n                  <button className=\"button\">My account</button>\n                  <NavLink to=\"/postad\">\n                    <button className=\"button\">Post an Ad</button>\n                  </NavLink>\n                  <button onClick={() => this.logoutClick()} className=\"button\">Logout</button>\n                </div>\n              </Col>\n            </Row>\n          ) : (\n            <Row className=\"navBarStyle\">\n              <Col>\n                <NavLink to=\"/dashboard\"> Craigslist </NavLink>\n              </Col>\n              <Col>\n                <div className=\"text-right\">\n                  <NavLink to=\"/signup\">\n                    {\" \"}\n                    <button className=\"button\"> Sign Up </button>\n                  </NavLink>\n                  <NavLink to=\"/login\">\n                    {\" \"}\n                    <button className=\"button\">Log In </button>\n                  </NavLink>\n                </div>\n              </Col>\n            </Row>\n          )}\n        </div>\n\n        <div>\n          <Switch>\n            <Route path=\"/dashboard\" component={Dashboard} />\n\n            <Route\n              path=\"/signup\"\n              render={() => (\n                <Signup\n                  currentUser={this.state.currentUser}\n                  onUserChange={userInfo => this.syncCurrentUser(userInfo)}\n                />\n              )}\n            />\n            <Route\n              path=\"/login\"\n              render={() => (\n                <Login\n                  currentUser={this.state.currentUser}\n                  onUserChange={userInfo => this.syncCurrentUser(userInfo)}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/postad\"\n              render={() => (\n                <PostAd\n                  currentUser={this.state.currentUser}\n                  // onUserChange={userInfo => this.syncCurrentUser(userInfo)}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/myaccount/editlisting/:theId\"\n              component={EditListing}\n            />\n\n            <Route path=\"/forsale/cars\" render={() => <AllCars />} />\n\n            <Route path=\"/cars/:carid\" component={CarDetails} />\n\n            <Route path=\"/foresale/housing\" render={() => <AllHouses />} />\n            <Route path=\"/housing/:houseid\" component={HouseDetails} />\n            <Route path=\"/myaccount/mylistings\" component={MyListings} />\n\n            {/* <Dashboard /> */}\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    // this is to be able to use Link and NavLink. App must be wrapped with BrowserRouter. This is like requiring the package\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}